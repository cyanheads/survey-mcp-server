# The name of your worker.
name = "mcp-ts-template-worker"

# The main entry point for your worker. Wrangler will build this file.
main = "src/worker.ts"

# The compatibility date ensures your worker runs on a recent version of the Workers runtime.
# It's good practice to update this periodically.
compatibility_date = "2025-09-24"

# Enable Node.js compatibility for Bun and other dependencies.
compatibility_flags = ["nodejs_compat"]

# Environment variables for your worker.
# Use `wrangler secret put <NAME>` to add secrets for sensitive values.
# Note: Non-sensitive config can be set here, secrets should use wrangler CLI.
[vars]
ENVIRONMENT = "production"
LOG_LEVEL = "info"
STORAGE_PROVIDER_TYPE = "in-memory"  # Options: "in-memory", "cloudflare-kv", "cloudflare-r2"
# MCP_ALLOWED_ORIGINS = "https://example.com,https://app.example.com"

# --- SECRETS (Add via CLI) ---
# Run these commands to add sensitive configuration:
#   wrangler secret put MCP_AUTH_SECRET_KEY
#   wrangler secret put OPENROUTER_API_KEY
#   wrangler secret put SUPABASE_URL
#   wrangler secret put SUPABASE_ANON_KEY
#   wrangler secret put SUPABASE_SERVICE_ROLE_KEY
#   wrangler secret put OAUTH_ISSUER_URL
#   wrangler secret put OAUTH_AUDIENCE
#   wrangler secret put SPEECH_TTS_API_KEY
#   wrangler secret put SPEECH_STT_API_KEY

# --- SERVICE BINDINGS ---
# Uncomment and configure the bindings you need for your MCP server.
# The binding names MUST match those defined in src/worker.ts CloudflareBindings interface.

# KV Namespace for fast key-value storage
# To create: wrangler kv namespace create KV_NAMESPACE
#            wrangler kv namespace create KV_NAMESPACE --preview
# Then uncomment and add the IDs:
# [[kv_namespaces]]
# binding = "KV_NAMESPACE"
# id = "your-production-kv-namespace-id-here"
# preview_id = "your-preview-kv-namespace-id-here"

# R2 Bucket for object storage
# To create: wrangler r2 bucket create mcp-storage
# Then uncomment:
# [[r2_buckets]]
# binding = "R2_BUCKET"
# bucket_name = "mcp-storage"
# preview_bucket_name = "mcp-storage-preview"

# D1 Database for relational data
# To create: wrangler d1 create mcp-database
#            Copy the database_id from output
# [[d1_databases]]
# binding = "DB"
# database_name = "mcp-database"
# database_id = "your-database-id-here"
# preview_database_id = "your-preview-database-id-here"

# Cloudflare AI for inference
# No setup needed - enabled by default for Workers with AI access
# [ai]
# binding = "AI"

# --- ADVANCED CONFIGURATION ---

# Enable observability for better monitoring and debugging.
[observability]
enabled = true
head_sampling_rate = 1

# Example for Cron Triggers to run scheduled tasks.
# [triggers]
# crons = ["0 */6 * * *"] # Run every 6 hours
